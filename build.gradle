plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	// 기본 웹 기능
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// TEST
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// spring-boot 에서 resilience4j 사용 가능하게 해 줌
	implementation 'io.github.resilience4j:resilience4j-spring-boot2:1.7.1'
	
	// resilience 핵심 모듈 (CircuitBreaker, Bulkhead, RateLimiter, Retry, TimeLimiter), 부분적으로 implementation 가능
	implementation 'io.github.resilience4j:resilience4j-all:1.7.1'

	// annotation 으로 circuit-breaker 의 옵션 설정가능
	implementation 'io.github.resilience4j:resilience4j-annotations:1.7.1'

	// resilience4j 의 annotation 을 spring aop 로 실행 가능하게 해줌. 이 설정이 없으면 동작하지 않음
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	// actuator 를 통해 서비스의 상태 확인 가능 /actuator url을 통해 확인 가능
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// circuit-breaker ui 확인
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// lombock
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	testCompileOnly 'org.projectlombok:lombok:1.18.22'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'


}

test {
	useJUnitPlatform()
}
